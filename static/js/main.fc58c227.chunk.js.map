{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","timer","this","setInterval","setState","console","log","toLocaleTimeString","clearInterval","name","props","className","React","Component","App","isClockVisible","clockName","Math","floor","random","randomName","type","onClick","getShow","getHide","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,MAAQ,EALV,kEAOuB,IAAD,OAClBC,KAAKD,MAAQE,aAAY,WACvB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAR,yBAA6B,IAAIN,MAAOO,yBACvC,OAZP,6CAgBIC,cAAcN,KAAKD,SAhBvB,+BAmBY,IACAF,EAASG,KAAKJ,MAAdC,KACAU,EAASP,KAAKQ,MAAdD,KAER,OACE,yBAAKE,UAAU,SACb,2CACA,mCAEIF,GAEJ,2CAEG,IACAV,EAAKQ,2BAjChB,GAA2BK,IAAMC,WC2DlBC,G,kNAzDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,wDAI3BjB,KAAKE,SAAS,CAAEW,gBAAgB,M,gCAIhCb,KAAKE,SAAS,CAAEW,gBAAgB,M,mCAIhC,IAAMK,EAAaH,KAAKC,MAAsB,IAAhBD,KAAKE,UAEnCd,QAAQC,IAAR,qCACgCJ,KAAKJ,MAAMkB,UAD3C,eAC2DI,IAE3DlB,KAAKE,SAAS,CAAEY,UAAWI,M,+BAGnB,IAAD,SAC+BlB,KAAKJ,MAAnCiB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKL,UAAU,aACZI,GAAkB,kBAAC,EAAD,CAAON,KAAMO,IAEhC,4BACEK,KAAK,SACLC,QAAS,kBAAM,EAAKC,WACpBZ,UAAU,UAHZ,cAQA,4BACEU,KAAK,SACLC,QAAS,kBAAM,EAAKE,WACpBb,UAAU,UAHZ,cAQA,4BACEU,KAAK,SACLC,QAAS,kBAAM,EAAKF,cACpBT,UAAU,UAHZ,wB,GA9CUC,IAAMC,YCAxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fc58c227.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  }\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ time: new Date() });\n      /* eslint-disable-next-line */\n      console.log(`Current time: ${new Date().toLocaleTimeString()}`)\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"clock\">\n        <h1>React clock</h1>\n        <p>\n          Name:\n          { name }\n        </p>\n        <p>\n          Current time:\n          {' '}\n          {time.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 1000),\n  }\n\n  getShow() {\n    this.setState({ isClockVisible: true });\n  }\n\n  getHide() {\n    this.setState({ isClockVisible: false });\n  }\n\n  randomName() {\n    const randomName = Math.floor(Math.random() * 1000);\n    // eslint-disable-next-line\n    console.log(\n      `The Clock was renamed from ${this.state.clockName} to ${randomName}`,\n    );\n    this.setState({ clockName: randomName });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"container\">\n        {isClockVisible && <Clock name={clockName} />}\n\n        <button\n          type=\"button\"\n          onClick={() => this.getShow()}\n          className=\"button\"\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.getHide()}\n          className=\"button\"\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.randomName()}\n          className=\"button\"\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}